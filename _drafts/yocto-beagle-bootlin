apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
     build-essential chrpath socat cpio python python3 python3-pip python3-pexpect \
     xz-utils debianutils iputils-ping libsdl1.2-dev xterm

apt-get install locales
dpkg-reconfigure locales
locale-gen en_US.UTF-8
update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

export LANG=en_US.UTF-8
useradd nayab
su - nayab

cd
wget https://bootlin.com/doc/training/yocto/yocto-labs.tar.xz
tar xvf yocto-labs.tar.xz

cd yocto-labs
git clone git://git.yoctoproject.org/poky.git

The /tmp/sysroots directory has the shared libraries and headers to compile applications for the target

The build/conf directory holds build specific configuration.
	bblayers.conf - List of available layers
	local.conf - Consists of configuration variables.


cd $HOME/yocto-labs/poky
git checkout -b sumo-19.0.0 sumo-19.0.0
git am $HOME/yocto-labs/bootlin-lab-data/0001-bblayers-do-not-include-meta-yocto-bsp.patch

cd $HOME/yocto-labs
git clone git://git.yoctoproject.org/meta-ti.git
cd $HOME/yocto-labs/meta-ti
git checkout -b sumo ti2018.02
git am $HOME/yocto-labs/bootlin-lab-data/0001-Simplify-linux-ti-staging-recipe.patch
git am $HOME/yocto-labs/bootlin-lab-data/0002-do-not-use-base_read_file.patch
git am $HOME/yocto-labs/bootlin-lab-data/0003-recipes-bsp-u-boot-fix-non-booting-U-Boot.patch
git am $HOME/yocto-labs/bootlin-lab-data/0004-fix-bitbake-warnings.patch

cd $HOME/yocto-labs
source poky/oe-init-build-env

Update MACHINE value to beaglebone in the build/local.conf
Add meta-ti layer to build/bblayers.conf file.

bitbake core-image-minimal # Minimal image without UI
bitbake core-image-sato    # Image with GNOME mobile UI
bitbake meta-toolchain	# Generates cross toolchain in an installable format
bitbake meta-ide-support	# Generates cross toolchain and additional tools (gdb, qemu) for ide integration
## You can use ide and integrate these tools for your blog

## How to compile individual packages?

## Configure variables modification
We can use _append, _prepend, _remove to the configuration variable.
Write all the common configuration variable definition below.

Append the machine name to a configuration variable so that the value will be applied to only that particular machine

KERNEL_DEVICETREE_beaglebone = "am335x-bone.dtb" tells to use the kernel
device tree am335x-bone.dtb only when the machine is beaglebone.

The configuration variable IMAGE_INSTALL_append_beaglebone = " i2c-tools" tell the build system to append i2c-tools only for the machine beaglebone.

## Operators
Following operators can be used to assign value to configuration variables.

= expand the value when using the variable
:= immediately expand the value
?= assign if no other value was previously assigned
??= same as previous, with a lower precedence

Usage of the following operators are discouraged due to ordering issues.

+= append (with space)
=+ prepend (with space)
.= append (without space)
=. prepend (without space)

## Virtual packages
Build system can have more variants of the package with same purpose.

For example: Available libraries - glibc, musl, newlib
or
ssh - openssh or dropbear

We can specify which variant to consider for the build system using the PREFERRED_PROVIDER virtual configuration variable.

PREFERRED_PROVIDER_virtual/libc = "glibc"

Again the glibc package has different versions. By default the build system will choose highest version. To choose different version, use PREFERRED_VERSION_package_name = "version".

PREFERRED_VERSION_linux-yocto = "3.10\%"
