Standard collections
Vec - Dynamic array
VecDeque - Double ended queue
LinkedList - Double Linkedlist
BinaryHeap - Max Heap
Hashmap - Dictionary (key, value)
BTreeMap - Sorted Dictionary
HashSet - Hashtable
BTreeSet - Sorted hash set


Some, None -> Are these keywords??


Vec - Dynamic array
-------------
let mut a = Vec::new();

a.push(1);
a.push(2);

for x in &a { println!("{}", x); }

HashMap
-------
let mut shapes = HashMap::new();

shapes.insert(String::from("triangle"), 3);
shapes.insert(String::from("square"), 4);
println~("A square has {} sides", shapes["square".into()]);

for (key, value) in &shapes {
	println!("{} has {} sides", key, value);
}

shapes.entry("circle".into()).or_insert(0); // Insert circle if circle is not there.

HashSet
-------
Can't guarantee in which order the entries goes into hashset
let _1_10:HashSet<_> = {1..=10}.collect(); // What is that <_>? and What is collect()?

Iterations
----------
for x in vec.iter() { // Or for x in vec.iter_mut() or vec.iter().rev()
	println!("{}", x);
}
What vec2.extend(vec); has to do with vec.iter()? Can we print vec after that?
